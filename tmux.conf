set-option -g default-command "reattach-to-user-namespace -l /bin/zsh"

# start window numbering at 1
set -g base-index 1

# start pane numbering at 1
set -g pane-base-index 1

set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g set-titles on
set -g set-titles-string '#W'

# use VI
set-window-option -g mode-keys vi

# Use ctrl-a instead of ctrl-b
set -g prefix C-a
unbind C-b

# still want to use ctrl-a on cmdline
bind C-a send-prefix

# enable for iTerm (Terminal.app doesn't have mouse support)
set -g mouse-resize-pane on

if-shell "test -f .tmuxline.conf" "source .tmuxline.conf"

# reload config
#unbind r
#bind r source-file ~/.tmux.conf; display "Reloaded"
#set-window-option -g allow-rename off

# status bar
set -g status-bg black
set -g status-fg colour240
set -g status-interval 60
set -g status-right-length 60

set -g status-utf8 on
set -g status-left ' '
# set -g status-right '#[fg=green]%m-%d %H:%M#[default] '

#setw -g monitor-activity on
#set -g visual-activity on

# horizontal and vertical splits
unbind |
bind | split-window -h
unbind _
bind _ split-window

# lets make panes more like vim
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# resize
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# mousercise
# setw -g mouse-mode on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# binding to clear the screen
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-environment -gu RBENV_VERSION
