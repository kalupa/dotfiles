# Setting the prefix from `C-b` to `C-a`.
# By remapping the `CapsLock` key to `Ctrl`,
# you can make triggering commands more comfottable!
set -g prefix C-a

set -g default-terminal "screen-256color"

# Free the original `Ctrl-b` prefix keybinding.
unbind C-b

# Ensure that we can send `Ctrl-a` to other apps.
bind C-a send-prefix

# Reload the file with Prefix r.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Splitting panes.
bind | split-window -h
bind - split-window -v

# Moving between panes.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
#
# Maximize and restore a pane.
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Moving between windows.
# Provided you've mapped your `CAPS LOCK` key to the `CTRL` key,
# you can now move between panes without moving your hands off the home row.
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# Moving windows
bind-key Left swap-window -t -1
bind-key Right swap-window -t +1
#
# Setting the delay between prefix and command.
set -sg escape-time 1

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# Mouse support - set to on if you want to use the mouse.
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off
# setw -g mouse-mode on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# binding to clear the screen
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Vimlike copy mode.
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind-key -t vi-copy v begin-selection

# Setup 'y' to yank as in Vim
bind -t vi-copy y copy-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-environment -gu RBENV_VERSION

# Solarized color.
source-file ~/.tmux/vendor/tmux-colors-solarized/tmuxcolors-256.conf

# powerline
source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# color over-rides
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-attr dim
set-option -g message-fg colour33 #orange

  #"\'a'    : [ '#(moonmoji) ' ],
  #"\'b'    : [ '#W' ],
  #"\'c'    : [ '#(whoami)' ],
  #"\'win'  : ['#I','#W'],
  #"\'cwin' : ['#I','#W #F'],
  #"\'x'    : [ '%a %Y/%m/%d' ],
  #"\'y'    : [ '%R %Z' ]}

